<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
   xmlns:jee="http://www.springframework.org/schema/jee"
   xmlns:jms="http://www.springframework.org/schema/jms"
   xmlns:lang="http://www.springframework.org/schema/lang"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:oxm="http://www.springframework.org/schema/oxm"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:task="http://www.springframework.org/schema/task"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:util="http://www.springframework.org/schema/util"
   xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
      http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
      http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
        <!-- 
        특정패키지를 스캔해서 리플렉션으로 클레스를 싸그리올리고 
        @가붙은 클래스를 생성?해라
         -->
         
         <!-- runtime(실행) 시 com.itwill.guest와 하위패키지의 모든 클래스의 
         Annotation(@)을 스캔해서 초기화(객체생성,의존성주입) //여기서는 생성작업만함--> 
        <context:component-scan base-package="com.itwill.guest"/>
        <context:component-scan base-package="com.itwill.user"/>
        
        <!--
        빈을 등록하려면 ApplicationCotext초기화시에 
        기본생성자를 호출하여 빈객체르 생성하고 id로 등록한다.
         -->
        
        <!-- DataSource 객체 -->
        <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource" 
          scope="singleton"/>
        <!--  Dao 객체  -->
        
        

        <!--  Serivice 객체 -->


</beans>